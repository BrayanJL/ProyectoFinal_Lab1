/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vistas;

import AccesoADatos.SocioData;
import Entidades.Socio;
import java.awt.Color;
import java.util.List;
import java.util.regex.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rirou
 */
public class GestionSocios extends javax.swing.JInternalFrame {

    /**
     * Creates new form GestionSocios
     */
    
    private DefaultTableModel modeloSocio;
    private SocioData sd = new SocioData();
    private Socio socioActual = null;
    private boolean cambiosHabilitados = false;
    
    public GestionSocios() {
        initComponents();
        modeloSocio = (DefaultTableModel) jtSocios.getModel();
        llenarTabla();
        jrbEstado.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlNombre = new javax.swing.JLabel();
        jlDNI = new javax.swing.JLabel();
        jlApellido = new javax.swing.JLabel();
        jlEspecialidad = new javax.swing.JLabel();
        jlEstado = new javax.swing.JLabel();
        jtfDni = new javax.swing.JTextField();
        jtfNombre = new javax.swing.JTextField();
        jtfEstado = new javax.swing.JTextField();
        jtfEdad = new javax.swing.JTextField();
        jtfApellido = new javax.swing.JTextField();
        jtfTelefono = new javax.swing.JTextField();
        jlApellido1 = new javax.swing.JLabel();
        jtfEmail = new javax.swing.JTextField();
        jlNombre1 = new javax.swing.JLabel();
        jrbEstado = new javax.swing.JRadioButton();
        jlSocio = new javax.swing.JLabel();
        jbAgregar = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbModificar = new javax.swing.JButton();
        jbDeshabilitar = new javax.swing.JButton();
        jcbSocios = new javax.swing.JComboBox<>();
        jtfBuscarNombre = new javax.swing.JTextField();
        jbBuscarNombre = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtSocios = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(624, 498));

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        jlNombre.setText("Nombre");

        jlDNI.setText("DNI");

        jlApellido.setText("Apellido");

        jlEspecialidad.setText("Edad");

        jlEstado.setText("Estado");

        jtfDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfDniActionPerformed(evt);
            }
        });

        jtfEstado.setEnabled(false);

        jlApellido1.setText("Telefono");

        jlNombre1.setText("Email");

        jrbEstado.setText("Empezar como activo");
        jrbEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbEstadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlEstado)
                    .addComponent(jlDNI)
                    .addComponent(jlNombre)
                    .addComponent(jlNombre1)
                    .addComponent(jlApellido1))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jtfDni)
                                .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtfEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlEspecialidad)
                                    .addComponent(jlApellido))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfEdad, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfApellido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jrbEstado)
                                .addContainerGap(40, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfEmail)
                            .addComponent(jtfTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jtfDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlEstado)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlDNI)
                            .addComponent(jlEspecialidad)
                            .addComponent(jtfEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlApellido)
                            .addComponent(jlNombre)
                            .addComponent(jtfApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlNombre1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlApellido1))
                        .addGap(18, 18, 18)
                        .addComponent(jrbEstado)))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jlSocio.setText("Socio:");

        jbAgregar.setText("AGREGAR");
        jbAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarActionPerformed(evt);
            }
        });

        jbBuscar.setText("BUSCAR");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbModificar.setText("MODIFICAR");
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbDeshabilitar.setText("DESHABILITAR");
        jbDeshabilitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeshabilitarActionPerformed(evt);
            }
        });

        jcbSocios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Listar todos los socios", "Listar los socios activos", "Listar los socios inactivos" }));
        jcbSocios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSociosActionPerformed(evt);
            }
        });

        jbBuscarNombre.setText("Buscar por nombre");
        jbBuscarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarNombreActionPerformed(evt);
            }
        });

        jtSocios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "DNI", "Nombre", "Apellido", "Edad", "Email", "Telefono", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtSocios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtSociosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtSocios);

        jScrollPane2.setViewportView(jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jcbSocios, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jbModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                                    .addComponent(jbBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbDeshabilitar, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                                    .addComponent(jbAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jlSocio))
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtfBuscarNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbBuscarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jlSocio)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jbAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbDeshabilitar))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jcbSocios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfBuscarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscarNombre))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean isCambiosHabilitados() {
        return cambiosHabilitados;
    }

    public void setCambiosHabilitados(boolean cambiosHabilitados) {
        this.cambiosHabilitados = cambiosHabilitados;
    }
    
    private void jbAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarActionPerformed
        if (jbAgregar.getText().equals("AGREGAR")) {
            reestablecerControles();
            jlSocio.setText("Llene los campos con los datos del socio a ingresar");
            jlSocio.setForeground(Color.BLUE);
            jtfDni.requestFocusInWindow();
            jbAgregar.setText("GUARDAR CAMBIOS");
            jtfEstado.setText("Inactivo");
            jrbEstado.setVisible(true);
        }
        else if (validacionFormulario()) {
            setearSocioConDatosDeFormulario();
            if(sd.buscarSocioPorDNI(socioActual.getDni()) == null){    
                sd.guardarSocio(socioActual);
                reestablecerControles();
                llenarTabla();
            }
            else {
                JOptionPane.showMessageDialog(this, "Este socio ya existe");
            }    
        }
    }//GEN-LAST:event_jbAgregarActionPerformed

    private void jtfDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfDniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfDniActionPerformed

    private void jtSociosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtSociosMouseClicked
        // TODO add your handling code here:
        if(jtSocios.getSelectedRow() != -1) {
            reestablecerControles();
            int fila = jtSocios.getSelectedRow();
            jtfDni.setText(String.valueOf(modeloSocio.getValueAt(fila, 1)));
            jtfNombre.setText(String.valueOf(modeloSocio.getValueAt(fila, 2)));
            jtfApellido.setText(String.valueOf(modeloSocio.getValueAt(fila, 3)));
            jtfEdad.setText(String.valueOf(modeloSocio.getValueAt(fila, 4)));
            jtfEmail.setText(String.valueOf(modeloSocio.getValueAt(fila, 5)));
            jtfTelefono.setText(String.valueOf(modeloSocio.getValueAt(fila, 6)));
      
            if (String.valueOf(modeloSocio.getValueAt(fila, 7)).equals("true")) {
                jtfEstado.setText(String.valueOf("Activo"));
                jbDeshabilitar.setText("DESHABILITAR");
            }
            else {
                jtfEstado.setText(String.valueOf("Inactivo"));
                jbDeshabilitar.setText("HABILITAR");
            }
           
            setCambiosHabilitados(true);
            setearSocioConDatosDeFormulario();
        }
        
        
    }//GEN-LAST:event_jtSociosMouseClicked

    private void jrbEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbEstadoActionPerformed
        if (!jrbEstado.isSelected()) {
            jtfEstado.setText("Inactivo");
        }
        else jtfEstado.setText("Activo");
    }//GEN-LAST:event_jrbEstadoActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        if (jbBuscar.getText().equals("BUSCAR")){
            reestablecerControles();
            jlSocio.setText("Escriba el DNI del socio que busca");
            jlSocio.setForeground(Color.BLUE);
            jtfDni.requestFocusInWindow();
            jtfNombre.setEnabled(false);
            jtfApellido.setEnabled(false);
            jtfEdad.setEnabled(false);
            jtfEmail.setEnabled(false);
            jtfTelefono.setEnabled(false);
            jbBuscar.setText("CONFIRMAR BÚSQUEDA");
        }
        else if (validacionDNI()) {
            int dni = Integer.parseInt(jtfDni.getText());
            socioActual = sd.buscarSocioPorDNI(dni);
            reestablecerControles(); 
            
            if (socioActual != null) {
                llenarCampos();
                setCambiosHabilitados(true);
                setearSocioConDatosDeFormulario();
            }
            else {
                JOptionPane.showMessageDialog(this, "Socio no encontrado");
            }
        }
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbDeshabilitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeshabilitarActionPerformed
        if (!isCambiosHabilitados()) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar o buscar un socio "
                    + "antes de modificarlo");
            return;
        }
        
        if (jbDeshabilitar.getText().equals("DESHABILITAR")) {
            sd.eliminarSocio(socioActual.getDni());
            socioActual = sd.buscarSocioPorDNI(socioActual.getDni());
            llenarCampos();
            llenarTabla();
        }
        else {
            sd.habilitarSocio(socioActual.getDni());
            socioActual = sd.buscarSocioPorDNI(socioActual.getDni());
            llenarCampos();
            llenarTabla();
        }
    }//GEN-LAST:event_jbDeshabilitarActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        if (!isCambiosHabilitados()) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar o buscar un socio "
                    + "antes de modificarlo");
            return;
        }
        
        if (jbModificar.getText().equals("MODIFICAR")) {
            reestablecerControles();         
            socioActual = sd.buscarSocioPorDNI(socioActual.getDni());
            String id = String.valueOf(socioActual.getIdSocio());
  
            jlSocio.setText("Llene los campos con los nuevos datos del socio "
                    + "(ID:" + id + ")");
            jlSocio.setForeground(Color.BLUE);
            jtfDni.requestFocusInWindow();
            jbModificar.setText("GUARDAR CAMBIOS");
            
            setCambiosHabilitados(true);
        }
        else if (validacionFormulario()) {
            int id = socioActual.getIdSocio();
            setearSocioConDatosDeFormulario();
            socioActual.setIdSocio(id);
            sd.modificarSocio(socioActual);
            llenarTabla();
            reestablecerControles();
        }
    }//GEN-LAST:event_jbModificarActionPerformed

    private void jcbSociosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSociosActionPerformed
        int eleccion = jcbSocios.getSelectedIndex();
        
        switch (eleccion) {
            case 0: llenarTabla();
            return;
            case 1: llenarTablaActivos();
            return;
            case 2: llenarTablaNoActivos();
        }
    }//GEN-LAST:event_jcbSociosActionPerformed

    private void jbBuscarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarNombreActionPerformed
        List<Socio> socios;
        int eleccion = jcbSocios.getSelectedIndex();
        
        switch (eleccion) {
            case 0: llenarTablasPorNombre(sd.listarSocios());
            return;
            case 1: llenarTablasPorNombre(sd.listarSociosActivos());
            return;
            case 2: llenarTablasPorNombre(sd.listarSociosNoActivos());
            return;
        }
    }//GEN-LAST:event_jbBuscarNombreActionPerformed

    private void setearSocioConDatosDeFormulario() {
        int dni = Integer.parseInt(jtfDni.getText());
        String nombre = jtfNombre.getText();
        String apellido = jtfApellido.getText();
        int edad = Integer.parseInt(jtfEdad.getText());
        String correo = jtfEmail.getText();
        String telefono = jtfTelefono.getText();
        boolean estado = jtfEstado.getText().equals("Activo");
        
        socioActual = new Socio(dni, nombre, apellido, edad, correo, telefono, estado);
    }
    
    private void reestablecerControles() {
        jlSocio.setText("Socio:");
        jlSocio.setForeground(Color.BLACK);
        jbAgregar.setText("AGREGAR");
        jbModificar.setText("MODIFICAR");
        jbBuscar.setText("BUSCAR");
        jtfNombre.setEnabled(true);
        jtfApellido.setEnabled(true);
        jtfEdad.setEnabled(true);
        jtfEmail.setEnabled(true);
        jtfTelefono.setEnabled(true);
        jrbEstado.setSelected(false);
        jrbEstado.setVisible(false);
        setCambiosHabilitados(false);
        limpiarCampos();
    }
    
    private void llenarCampos() {
        jtfDni.setText(String.valueOf(socioActual.getDni()));
        jtfNombre.setText(socioActual.getNombre());
        jtfApellido.setText(socioActual.getApellido());
        jtfEdad.setText(String.valueOf(socioActual.getEdad()));
        jtfEmail.setText(socioActual.getCorreo());
        jtfTelefono.setText(socioActual.getTelefono());
                
        if(socioActual.isActivo()) {
            jtfEstado.setText("Activo");
            jbDeshabilitar.setText("DESHABILITAR");
        }
        else {
            jtfEstado.setText("Inactivo");
            jbDeshabilitar.setText("HABILITAR");
        }
    }
    
    private void limpiarCampos() {
        jtfDni.setText("");
        jtfNombre.setText("");
        jtfApellido.setText("");
        jtfEdad.setText("");
        jtfEmail.setText("");
        jtfTelefono.setText("");
        jtfEstado.setText("");
    }
    
    private void limpiarTabla(){
        for (int i = modeloSocio.getRowCount(); i>0; i--)
            modeloSocio.removeRow(0);
    }
    
    private void llenarTabla() {
        limpiarTabla();
        List<Socio> socios;
        socios = sd.listarSocios();
        
        for (Socio s : socios) {
            modeloSocio.addRow(new Object[]{
                s.getIdSocio(),
                s.getDni(),
                s.getNombre(),
                s.getApellido(),
                s.getEdad(),
                s.getCorreo(),
                s.getTelefono(),
                s.isActivo()
            });
        }
    }
    
    private void llenarTablaActivos() {
        limpiarTabla();
        List<Socio> socios;
        socios = sd.listarSociosActivos();
        
        for (Socio s : socios) {
            modeloSocio.addRow(new Object[]{
                s.getIdSocio(),
                s.getDni(),
                s.getNombre(),
                s.getApellido(),
                s.getEdad(),
                s.getCorreo(),
                s.getTelefono(),
                s.isActivo()
            });
        }
    }
    
    private void llenarTablaNoActivos() {
        limpiarTabla();
        List<Socio> socios;
        socios = sd.listarSociosNoActivos();
        
        for (Socio s : socios) {
            modeloSocio.addRow(new Object[]{
                s.getIdSocio(),
                s.getDni(),
                s.getNombre(),
                s.getApellido(),
                s.getEdad(),
                s.getCorreo(),
                s.getTelefono(),
                s.isActivo()
            });
        }
    }
    
    private void llenarTablasPorNombre(List<Socio> socios) {
        limpiarTabla();
        String tx = jtfBuscarNombre.getText().toLowerCase();
        socios.removeIf(socio -> !socio.getNombre().toLowerCase().startsWith(tx));
        
        for (Socio s : socios) {
            modeloSocio.addRow(new Object[]{
                s.getIdSocio(),
                s.getDni(),
                s.getNombre(),
                s.getApellido(),
                s.getEdad(),
                s.getCorreo(),
                s.getTelefono(),
                s.isActivo()
            });
        }
    }
    
    private boolean validacionFormulario() {
        if (!validacionDNI()) {
            return false;
        }
        if (!validacionNombre()) {
            return false;
        }
        if (!validacionApellido()) {
            return false;
        }
        if (!validacionEdad()) {
            return false;
        }
        if (!validacionCorreo()) {
            return false;
        }
        if (!validacionTelefono()) {
            return false;
        }
        return true;
    }
    
    private boolean validacionDNI() {
        if (jtfDni.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campo DNI vacío.");
            jtfDni.requestFocusInWindow();
            return false;
        }
        
        try{        
            Integer.parseInt(jtfDni.getText());
        }catch(Exception nfe){
            JOptionPane.showMessageDialog(this, "El DNI debe ser un nro.");
            return false;
        }
        
        if (Integer.parseInt(jtfDni.getText()) < 0) {
            JOptionPane.showMessageDialog(this, "El DNI debe ser un nro positivo.");
            return false;
        }
        
        return true;
    }
    
    private boolean validacionApellido(){
        if (jtfApellido.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campo Apellido vacío.");
            jtfApellido.requestFocusInWindow();
            return false;
        }
        return true;
    }
    
    private boolean validacionNombre(){
        if (jtfNombre.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campo Nombre vacío.");
            jtfNombre.requestFocusInWindow();
            return false;
        }
        return true;
    }
    
    private boolean validacionEdad(){
        if (jtfEdad.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campo Edad vacío.");
            jtfEdad.requestFocusInWindow();
            return false;
        }
        
        try{        
            Integer.parseInt(jtfEdad.getText());
        }catch(Exception nfe){
            JOptionPane.showMessageDialog(this, "La Edad debe ser un nro.");
            return false;
        }
        
        if (Integer.parseInt(jtfEdad.getText()) < 0) {
            JOptionPane.showMessageDialog(this, "La Edad debe ser un nro positivo.");
            return false;
        }
        
        return true;
    }
    
    private boolean validacionCorreo(){
        
        Pattern pattern = Pattern.compile("^\\w+@\\w+(\\.\\w{2,4})+$", Pattern.CASE_INSENSITIVE);
        Matcher matcher = pattern.matcher(jtfEmail.getText());
        
        if (jtfEmail.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campo Email vacío.");
            jtfEmail.requestFocusInWindow();
            return false;
        }
        
        if (!matcher.find()) {
            JOptionPane.showMessageDialog(this, "Ingrese un Email valido.");
            return false;
        }
        
        return true;
    }
    
    private boolean validacionTelefono(){
        if (jtfTelefono.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campo Telefono vacío.");
            jtfTelefono.requestFocusInWindow();
            return false;
        }
        
        if (jtfTelefono.getText().length() > 19) {
            JOptionPane.showMessageDialog(this, "El Telefono es muy largo.");
            return false;
        }
        
        try{        
            Long.parseLong(jtfTelefono.getText());
        }catch(Exception nfe){
            JOptionPane.showMessageDialog(this, "El Telefono debe ser un nro.");
            return false;
        }
        
        if (Long.parseLong(jtfTelefono.getText()) < 0) {
            JOptionPane.showMessageDialog(this, "El Telefono debe ser un nro positivo.");
            return false;
        }
        
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbAgregar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbBuscarNombre;
    private javax.swing.JButton jbDeshabilitar;
    private javax.swing.JButton jbModificar;
    private javax.swing.JComboBox<String> jcbSocios;
    private javax.swing.JLabel jlApellido;
    private javax.swing.JLabel jlApellido1;
    private javax.swing.JLabel jlDNI;
    private javax.swing.JLabel jlEspecialidad;
    private javax.swing.JLabel jlEstado;
    private javax.swing.JLabel jlNombre;
    private javax.swing.JLabel jlNombre1;
    private javax.swing.JLabel jlSocio;
    private javax.swing.JRadioButton jrbEstado;
    private javax.swing.JTable jtSocios;
    private javax.swing.JTextField jtfApellido;
    private javax.swing.JTextField jtfBuscarNombre;
    private javax.swing.JTextField jtfDni;
    private javax.swing.JTextField jtfEdad;
    private javax.swing.JTextField jtfEmail;
    private javax.swing.JTextField jtfEstado;
    private javax.swing.JTextField jtfNombre;
    private javax.swing.JTextField jtfTelefono;
    // End of variables declaration//GEN-END:variables
}
